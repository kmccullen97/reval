{"version":3,"sources":["context/ThemeContext.jsx","components/ui/Input/Input.jsx","components/ui/Tooltip.jsx","helpers/index.js","context/DataContext.jsx","components/ui/Input/Label.jsx","components/ui/Toggle.jsx","components/ui/Input/index.jsx","components/ui/TutorialModal.jsx","components/ui/Navbar.jsx","components/ui/StaticField.jsx","components/groups/Investment.jsx","components/ui/Collapsible.jsx","components/groups/IncomeAndExpense.jsx","components/groups/Evaluation.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","isDarkMode","setDarkMode","useEffect","darkMode","localStorage","getItem","Provider","value","toggleDarkMode","newMode","setItem","Input","onChange","error","onClose","useContext","className","length","type","onClick","Tooltip","title","icon","iconClass","popover","Popover","Title","Content","OverlayTrigger","trigger","placement","overlay","formatValue","parseFloat","toLocaleString","style","currency","toFixed","calcValueOrPercent","valueOf","split","percent","fixedValue","evaluateData","data","p","r","t","evalData","purchasePrice","additionalCosts","rent","mortgageRate","mortgageTerm","leaseLength","turnover","vacancyRate","downPayment","closingCosts","upFrontCost","propertyManager","loanBalance","mortgagePayment","Math","pow","insurance","propertyTax","cashFlow","cashOnCash","leaseRenewalFee","procurementFee","additionalPropertyManagementExpense","equityYearOne","n","calculateEquityGainYearOne","majorMinorCapEx","mediumTerm","warnings","DataContext","defaults","name","homeValue","DataProvider","setData","setEvalData","setWarnings","urlParams","URLSearchParams","window","location","search","initialData","Object","keys","forEach","key","get","evaluate","evalWarnings","setDataValue","updatedData","Label","label","isStatic","undefined","info","Toggle","toggle","leftIcon","rightIcon","size","styles","height","width","padding","CustomInput","valueType","inline","valueAndPercent","percentValueOf","isActive","setIsActive","editValue","setEditValueX","setError","setEditValue","newEditValue","setType","newType","newValue","join","updateUrlParams","set","history","replaceState","toString","onSubmit","e","preventDefault","target","isNaN","TutorialModal","show","setShow","handleClose","Modal","onHide","Header","closeButton","Body","Footer","Button","variant","CustomNavbar","Navbar","expand","Brand","color","Nav","StaticField","Investment","Collapsible","open","setOpen","aria-controls","aria-expanded","Collapse","in","IncomeAndExpense","Evaluation","App","href","process","ProviderApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c92fec1.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const darkMode = localStorage.getItem(\"isDarkTheme\");\r\n    setDarkMode(darkMode === \"true\");\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newMode = !isDarkMode;\r\n    setDarkMode(newMode);\r\n    localStorage.setItem(\"isDarkTheme\", newMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\n\r\nconst Input = ({ value, onChange, error, onClose }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-direction-row align-items-center\">\r\n        <input\r\n          className={`form-control${error.length !== 0 ? \"is-invalid \" : \"\"} ${\r\n            isDarkMode ? \" bg-dark text-light\" : \"\"\r\n          }`}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"close-input\" onClick={onClose}>\r\n          <FiX />\r\n        </span>\r\n      </div>\r\n      {error.length !== 0 && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst Tooltip = ({ children, title, icon, iconClass = \"\" }) => {\n  const popover = (\n    <Popover>\n      <Popover.Title>{title}</Popover.Title>\n      <Popover.Content>{children}</Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      trigger={[\"hover\", \"focus\"]}\n      placement=\"right\"\n      overlay={popover}\n    >\n      <span className={`p-1 ${iconClass}`}>{icon}</span>\n    </OverlayTrigger>\n  );\n};\n\nTooltip.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  iconClass: PropTypes.string,\n};\n\nexport default Tooltip;\n","export const formatValue = (value, type) => {\r\n  switch (type) {\r\n    case \"V\":\r\n    case \"currency\":\r\n      return parseFloat(value).toLocaleString(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      });\r\n    case \"P\":\r\n    case \"percent\":\r\n      return `${(parseFloat(value) * 100).toFixed(3)}%`;\r\n    case \"number\":\r\n    case \"text\":\r\n      return value;\r\n    default:\r\n      return \"!REF\";\r\n  }\r\n};\r\n\r\nexport const calcValueOrPercent = (value, valueOf) => {\r\n  const [percent, fixedValue, type] = value.split(\",\");\r\n\r\n  return type === \"P\" ? parseFloat(percent) * valueOf : parseFloat(fixedValue);\r\n};\r\n\r\nconst calculateMortgagePayment = (p, r, t) => {\r\n  return (\r\n    (p * (r / 12) * Math.pow(1 + r / 12, 12 * t)) /\r\n    (Math.pow(1 + r / 12, 12 * t) - 1)\r\n  );\r\n};\r\n\r\nconst calculateEquityGainYearOne = (p, r, n) => {\r\n  return (\r\n    p *\r\n    (1 - (Math.pow(1 + r, n) - Math.pow(1 + r, 12)) / (Math.pow(1 + r, n) - 1))\r\n  );\r\n};\r\n\r\nexport const evaluateData = (data) => {\r\n  const evalData = {\r\n    purchasePrice: parseFloat(data.purchasePrice),\r\n    additionalCosts: parseFloat(data.additionalCosts),\r\n    rent: parseFloat(data.rent),\r\n    mortgageRate: parseFloat(data.mortgageRate),\r\n    mortgageTerm: parseFloat(data.mortgageTerm),\r\n    leaseLength: parseFloat(data.leaseLength),\r\n    turnover: parseFloat(data.turnover),\r\n    vacancyRate: parseFloat(data.vacancyRate),\r\n  };\r\n  evalData.downPayment = calcValueOrPercent(\r\n    data.downPayment,\r\n    evalData.purchasePrice\r\n  );\r\n  evalData.closingCosts = calcValueOrPercent(\r\n    data.closingCosts,\r\n    evalData.purchasePrice\r\n  );\r\n  evalData.upFrontCost =\r\n    evalData.downPayment + evalData.closingCosts + evalData.additionalCosts;\r\n  evalData.propertyManager = calcValueOrPercent(\r\n    data.propertyManager,\r\n    evalData.rent\r\n  );\r\n  evalData.loanBalance = evalData.purchasePrice - evalData.downPayment;\r\n  evalData.mortgagePayment = calculateMortgagePayment(\r\n    evalData.loanBalance,\r\n    evalData.mortgageRate,\r\n    evalData.mortgageTerm\r\n  );\r\n  evalData.insurance = calcValueOrPercent(\r\n    data.insurance,\r\n    evalData.purchasePrice\r\n  );\r\n  evalData.propertyTax = calcValueOrPercent(\r\n    data.propertyTax,\r\n    evalData.purchasePrice\r\n  );\r\n  evalData.cashFlow =\r\n    evalData.rent -\r\n    evalData.propertyManager -\r\n    evalData.mortgagePayment -\r\n    (evalData.insurance + evalData.propertyTax) / 12;\r\n  evalData.cashOnCash = (evalData.cashFlow * 12) / evalData.upFrontCost;\r\n  evalData.leaseRenewalFee = calcValueOrPercent(\r\n    data.leaseRenewalFee,\r\n    evalData.rent\r\n  );\r\n  evalData.procurementFee = calcValueOrPercent(\r\n    data.procurementFee,\r\n    evalData.rent\r\n  );\r\n  evalData.additionalPropertyManagementExpense =\r\n    (evalData.leaseRenewalFee / evalData.leaseLength +\r\n      evalData.procurementFee / evalData.turnover) /\r\n    12;\r\n  evalData.equityYearOne = calculateEquityGainYearOne(\r\n    evalData.loanBalance,\r\n    evalData.mortgageRate / 12,\r\n    evalData.mortgageTerm * 12\r\n  );\r\n  evalData.majorMinorCapEx = calcValueOrPercent(\r\n    data.majorMinorCapEx,\r\n    evalData.rent\r\n  );\r\n  evalData.mediumTerm =\r\n    evalData.cashFlow -\r\n    evalData.additionalPropertyManagementExpense -\r\n    evalData.rent * evalData.vacancyRate -\r\n    evalData.majorMinorCapEx;\r\n\r\n  const warnings = {};\r\n  if (evalData.downPayment / 0.2 < evalData.purchasePrice) {\r\n    warnings.downPayment =\r\n      \"Most lenders require a down payment of at least 20%.\";\r\n  }\r\n  if (evalData.mortgageTerm < 1) {\r\n    warnings.equityYearOne =\r\n      \"Can't calculate equity gained in the first year if the mortgage term is less than one year.\";\r\n  }\r\n\r\n  return [evalData, warnings];\r\n};\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { evaluateData } from \"../helpers\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst defaults = {\r\n  name: \"123 Main St. (Edit me)\",\r\n  homeValue: \"115000.00\",\r\n  purchasePrice: \"115000.00\",\r\n  downPayment: \"0.2,30000.00,P\",\r\n  closingCosts: \"0.03,2000.00,P\",\r\n  additionalCosts: \"0\",\r\n  rent: \"1100.00\",\r\n  propertyManager: \"0.1,100.00,P\",\r\n  leaseLength: \"1\",\r\n  leaseRenewalFee: \"0.25,100.00,P\",\r\n  turnover: \"3\",\r\n  procurementFee: \"1.0,1100,P\",\r\n  mortgageRate: \"0.0425\",\r\n  mortgageTerm: \"30\",\r\n  insurance: \"0.007,700.00,P\",\r\n  propertyTax: \"0.01,1000.00,P\",\r\n  vacancyRate: \"0.05\",\r\n  majorMinorCapEx: \"0.1,100,P\",\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [data, setData] = useState(defaults);\r\n  const [evalData, setEvalData] = useState({});\r\n  const [warnings, setWarnings] = useState({});\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const initialData = {};\r\n    Object.keys(defaults).forEach((key) => {\r\n      initialData[key] = urlParams.get(key)\r\n        ? urlParams.get(key)\r\n        : defaults[key];\r\n    });\r\n    evaluate(initialData);\r\n  }, []);\r\n\r\n  const setDataValue = (name, value) => {\r\n    const updatedData = {\r\n      ...data,\r\n      [name]: value,\r\n    };\r\n    evaluate(updatedData);\r\n  };\r\n\r\n  const evaluate = (data) => {\r\n    setData(data);\r\n    const [evalData, evalWarnings] = evaluateData(data);\r\n    setEvalData(evalData);\r\n    setWarnings(evalWarnings);\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data, setDataValue, evalData, warnings }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nDataProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { FiAlertTriangle, FiInfo } from \"react-icons/fi\";\r\nimport { AiFillThunderbolt } from \"react-icons/ai\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Tooltip from \"../Tooltip\";\r\nimport { DataContext } from \"../../../context/DataContext\";\r\nimport info from \"../../../data/info.json\";\r\n\r\nconst Label = ({ label, name, isStatic = false }) => {\r\n  const { warnings } = useContext(DataContext);\r\n\r\n  return (\r\n    <label>\r\n      <span>{label}</span>\r\n      {isStatic && (\r\n        <Tooltip\r\n          title=\"Static Field\"\r\n          icon={<AiFillThunderbolt />}\r\n          iconClass=\"text-muted\"\r\n        >\r\n          <span>This field is static and can&apos;t be changed</span>\r\n        </Tooltip>\r\n      )}\r\n      {info[name] !== undefined && (\r\n        <Tooltip title=\"Info\" icon={<FiInfo />} iconClass=\"text-muted\">\r\n          <span>{info[name]}</span>\r\n        </Tooltip>\r\n      )}\r\n      {warnings[name] !== undefined && (\r\n        <Tooltip\r\n          title=\"Warning\"\r\n          icon={<FiAlertTriangle />}\r\n          iconClass=\"text-warning\"\r\n        >\r\n          <span>{warnings[name]}</span>\r\n        </Tooltip>\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isStatic: PropTypes.bool,\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Toggle = ({ value, toggle, leftIcon, rightIcon, size = 40 }) => {\n  const styles = { height: `${size}px`, width: `${size}px`, padding: 0 };\n\n  return (\n    <div className=\"btn-group\">\n      <button\n        className={`btn btn-outline-primary icon ${value ? \"\" : \"active\"}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (value ? toggle() : null)}\n      >\n        {leftIcon}\n      </button>\n      <button\n        className={`btn btn-outline-primary icon ${value ? \"active\" : \"\"}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (!value ? toggle() : null)}\n      >\n        {rightIcon}\n      </button>\n    </div>\n  );\n};\n\nToggle.propTypes = {\n  value: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  leftIcon: PropTypes.node.isRequired,\n  rightIcon: PropTypes.node.isRequired,\n  size: PropTypes.number,\n};\n\nexport default Toggle;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FiDollarSign, FiPercent } from \"react-icons/fi\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Input from \"./Input\";\r\nimport Label from \"./Label\";\r\nimport Toggle from \"../Toggle\";\r\nimport { formatValue, calcValueOrPercent } from \"../../../helpers\";\r\nimport { DataContext } from \"../../../context/DataContext\";\r\n\r\nconst CustomInput = ({\r\n  name,\r\n  label = null,\r\n  value,\r\n  valueType = \"currency\",\r\n  inline = false,\r\n  valueAndPercent = false,\r\n  percentValueOf = null,\r\n}) => {\r\n  if (value == undefined) {\r\n    return null;\r\n  }\r\n  const [percent, fixedValue, type] = value.split(\",\");\r\n  const { setDataValue } = useContext(DataContext);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [editValue, setEditValueX] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setEditValue(value);\r\n  }, [value]);\r\n\r\n  const setEditValue = (newEditValue) => {\r\n    setEditValueX(\r\n      valueAndPercent ? (type === \"P\" ? percent : fixedValue) : newEditValue\r\n    );\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (error.length !== 0) {\r\n      return;\r\n    }\r\n\r\n    const newValue = valueAndPercent\r\n      ? type === \"P\"\r\n        ? [editValue, fixedValue, type].join(\",\")\r\n        : [percent, editValue, type].join(\",\")\r\n      : editValue;\r\n\r\n    updateUrlParams(newValue);\r\n    setDataValue(name, newValue);\r\n    setIsActive(false);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setError(\"\");\r\n    if (valueType !== \"text\" && isNaN(newValue)) {\r\n      setError(\"Must be a valid number.\");\r\n    }\r\n\r\n    setEditValueX(newValue);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setIsActive(false);\r\n    setError(\"\");\r\n    setEditValue(\r\n      valueAndPercent ? (type === \"P\" ? percent : fixedValue) : value\r\n    );\r\n  };\r\n\r\n  const setType = (newType) => {\r\n    const newValue = value.split(\",\");\r\n    newValue[2] = newType;\r\n    setEditValue(newType === \"P\" ? percent : fixedValue);\r\n    setDataValue(name, newValue.join(\",\"));\r\n    updateUrlParams(newValue);\r\n  };\r\n\r\n  const toggleType = () => {\r\n    if (type === \"P\") {\r\n      setType(\"V\");\r\n    } else {\r\n      setType(\"P\");\r\n    }\r\n  };\r\n\r\n  const updateUrlParams = (newValue) => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    urlParams.set(name, newValue);\r\n    window.history.replaceState({}, \"\", \"?\" + urlParams.toString());\r\n  };\r\n\r\n  const getFormattedValue = () => {\r\n    if (valueAndPercent) {\r\n      return formatValue(calcValueOrPercent(value, percentValueOf), \"V\");\r\n    } else {\r\n      return formatValue(value, valueType);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className={`form-group ${inline ? \"inline\" : \"\"}`}>\r\n        {label && <Label label={label} name={name} />}\r\n        <div className=\"d-flex\">\r\n          <div className=\"flex-fill\">\r\n            {isActive ? (\r\n              <Input\r\n                value={editValue}\r\n                onChange={handleOnChange}\r\n                error={error}\r\n                onClose={onClose}\r\n              />\r\n            ) : (\r\n              <div className=\"text-value\" onClick={() => setIsActive(true)}>\r\n                {getFormattedValue()}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {valueAndPercent && (\r\n            <Toggle\r\n              value={type !== \"P\"}\r\n              toggle={toggleType}\r\n              leftIcon={<FiPercent />}\r\n              rightIcon={<FiDollarSign />}\r\n              size={32}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nCustomInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  valueType: PropTypes.string,\r\n  inline: PropTypes.bool,\r\n  valueAndPercent: PropTypes.bool,\r\n  percentValueOf: PropTypes.number,\r\n};\r\n\r\nexport default CustomInput;\r\n","import React, { useState, useContext } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\n\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\nconst TutorialModal = () => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <div className=\"div-link px-2 mx-2\" onClick={handleShow}>\n        tutorial\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton className={isDarkMode ? \"dark\" : \"\"}>\n          <Modal.Title>Tutorial</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={isDarkMode ? \"dark\" : \"\"}>\n          <p>A rental property evaluator with sharable links.</p>\n          <h4>Editing Fields</h4>\n          <p>\n            All non static fields are editable. Static fields are denoted with a{\" \"}\n            <AiFillThunderbolt /> icon next to the label. To edit a field click\n            on the displayed text, make changes in the text input and hit ENTER\n            on your keyboard to submit the changes. Notice that all calculations\n            a re-run, and corresponding fields are updated.\n          </p>\n          <p>\n            There are two types of editable fields. Single value, and fixed\n            value and percent. Fixed value and percent fields contain a toggle\n            switch that allows you to quickly switch between a fixed value or a\n            percent.\n          </p>\n          <h4>Sharing links</h4>\n          <p>\n            Want to share your calculations with someone? Each edit updates the\n            link with the new value. Just send them the link after you make all\n            your changes.\n          </p>\n        </Modal.Body>\n        <Modal.Footer className={isDarkMode ? \"dark\" : \"\"}>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Got it\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TutorialModal;\n","import React, { useContext } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { BiBuildingHouse } from \"react-icons/bi\";\r\nimport { FiMoon, FiSun } from \"react-icons/fi\";\r\n\r\nimport Input from \"./Input\";\r\nimport TutorialModal from \"./TutorialModal\";\r\nimport Toggle from \"./Toggle\";\r\nimport { ThemeContext } from \"../../context/ThemeContext\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst CustomNavbar = () => {\r\n  const { isDarkMode, toggleDarkMode } = useContext(ThemeContext);\r\n  const { data } = useContext(DataContext);\r\n\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <BiBuildingHouse size={30} color={isDarkMode ? \"white\" : \"black\"} />\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Input name={\"name\"} label=\"\" value={data.name} valueType=\"text\" />\r\n      </Nav>\r\n      <Nav className=\"align-content-center\">\r\n        <TutorialModal />\r\n        <Toggle\r\n          value={isDarkMode}\r\n          toggle={toggleDarkMode}\r\n          leftIcon={<FiSun />}\r\n          rightIcon={<FiMoon />}\r\n          size={40}\r\n        />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Label from \"./Input/Label\";\r\nimport { formatValue } from \"../../helpers\";\r\n\r\nconst StaticField = ({ name, value, label, type = \"currency\" }) => (\r\n  <div className=\"form-group\">\r\n    <Label label={label} name={name} isStatic />\r\n    <div className=\"text-value static\">{formatValue(value, type)}</div>\r\n  </div>\r\n);\r\n\r\nStaticField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.number,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default StaticField;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../ui/Input\";\r\nimport StaticField from \"../ui/StaticField\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst Investment = () => {\r\n  const { data, evalData } = useContext(DataContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <Input name=\"homeValue\" label=\"Home Value\" value={data.homeValue} />\r\n        <Input\r\n          name=\"purchasePrice\"\r\n          label=\"Purchase Price\"\r\n          value={data.purchasePrice}\r\n        />\r\n      </div>\r\n      <div className=\"section\">\r\n        <Input\r\n          name=\"downPayment\"\r\n          label=\"Down Payment\"\r\n          value={data.downPayment}\r\n          percentValueOf={evalData.purchasePrice}\r\n          valueAndPercent\r\n        />\r\n        <Input\r\n          name=\"closingCosts\"\r\n          label=\"Closing Costs\"\r\n          value={data.closingCosts}\r\n          percentValueOf={evalData.purchasePrice}\r\n          valueAndPercent\r\n        />\r\n        <Input\r\n          name=\"additionalCosts\"\r\n          label=\"Additional Costs\"\r\n          value={data.additionalCosts}\r\n        />\r\n      </div>\r\n      <div className=\"section\">\r\n        <StaticField\r\n          name=\"upFrontCost\"\r\n          label=\"Up Front Cost\"\r\n          value={evalData.upFrontCost}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Investment;\r\n","import React, { useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst Collapsible = ({ children }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"div-link\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        {open ? \"see less\" : \"see more\"}\n      </div>\n      <Collapse in={open}>{children}</Collapse>\n    </>\n  );\n};\n\nCollapsible.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Collapsible;\n","import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../ui/Input\";\r\nimport StaticField from \"../ui/StaticField\";\r\nimport Collapsible from \"../ui/Collapsible\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst IncomeAndExpense = () => {\r\n  const { data, evalData } = useContext(DataContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <Input name=\"rent\" label=\"Rent\" value={data.rent} />\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"collapsible\">\r\n          <Input\r\n            name=\"propertyManager\"\r\n            label=\"Property Manager\"\r\n            value={data.propertyManager}\r\n            percentValueOf={evalData.rent}\r\n            valueAndPercent\r\n          />\r\n          <Collapsible>\r\n            <div className=\"indent\">\r\n              <Input\r\n                name=\"leaseLength\"\r\n                label=\"Lease Length\"\r\n                value={data.leaseLength}\r\n                valueType=\"number\"\r\n                inline\r\n              />\r\n              <Input\r\n                name=\"leaseRenewalFee\"\r\n                label=\"Lease Renewal Fee\"\r\n                value={data.leaseRenewalFee}\r\n                percentValueOf={evalData.rent}\r\n                valueAndPercent\r\n              />\r\n              <Input\r\n                name=\"turnover\"\r\n                label=\"Turnover\"\r\n                value={data.turnover}\r\n                valueType=\"number\"\r\n                inline\r\n              />\r\n              <Input\r\n                name=\"procurementFee\"\r\n                label=\"ProcurementFee\"\r\n                value={data.procurementFee}\r\n                percentValueOf={evalData.rent}\r\n                valueAndPercent\r\n              />\r\n              <StaticField\r\n                name=\"additionalPropertyManagementExpense\"\r\n                label=\"Additional Cost\"\r\n                value={evalData.additionalPropertyManagementExpense}\r\n              />\r\n            </div>\r\n          </Collapsible>\r\n        </div>\r\n        <div>\r\n          <div className=\"collapsible\">\r\n            <StaticField\r\n              name=\"mortgagePayment\"\r\n              label=\"Mortgage\"\r\n              value={evalData.mortgagePayment}\r\n            />\r\n            <Collapsible>\r\n              <div className=\"indent\">\r\n                <Input\r\n                  name=\"mortgageRate\"\r\n                  label=\"Rate\"\r\n                  value={data.mortgageRate}\r\n                  valueType=\"percent\"\r\n                  inline\r\n                />\r\n                <Input\r\n                  name=\"mortgageTerm\"\r\n                  label=\"Term\"\r\n                  value={data.mortgageTerm}\r\n                  valueType=\"number\"\r\n                  inline\r\n                />\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n          <Input\r\n            name=\"insurance\"\r\n            label=\"Insurance\"\r\n            value={data.insurance}\r\n            percentValueOf={evalData.purchasePrice}\r\n            valueAndPercent\r\n          />\r\n          <Input\r\n            name=\"propertyTax\"\r\n            label=\"Property Taxes\"\r\n            value={data.propertyTax}\r\n            percentValueOf={evalData.purchasePrice}\r\n            valueAndPercent\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IncomeAndExpense;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport StaticField from \"../ui/StaticField\";\r\nimport Input from \"../ui/Input\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst Evaluation = () => {\r\n  const { data, evalData } = useContext(DataContext);\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <StaticField\r\n          name=\"cashFlow\"\r\n          label=\"Cash Flow\"\r\n          value={evalData.cashFlow}\r\n        />\r\n        <StaticField\r\n          name=\"cashOnCash\"\r\n          label=\"Cash on Cash\"\r\n          value={evalData.cashOnCash}\r\n          type=\"percent\"\r\n        />\r\n        <StaticField\r\n          name=\"equityYearOne\"\r\n          label=\"Equity Y1\"\r\n          value={evalData.equityYearOne}\r\n        />\r\n      </div>\r\n      <div className=\"section\">\r\n        <Input\r\n          name=\"vacancyRate\"\r\n          label=\"Vacancy Rate\"\r\n          value={data.vacancyRate}\r\n          valueType=\"percent\"\r\n        />\r\n        <Input\r\n          name=\"majorMinorCapEx\"\r\n          label=\"Major Minor CapEx\"\r\n          value={data.majorMinorCapEx}\r\n          percentValueOf={evalData.rent}\r\n          valueAndPercent\r\n        />\r\n        <StaticField\r\n          name=\"mediumTerm\"\r\n          label=\"Medium Term\"\r\n          value={evalData.mediumTerm}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Evaluation;\r\n","import React, { useContext } from \"react\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\nimport Navbar from \"./components/ui/Navbar\";\r\nimport Investment from \"./components/groups/Investment\";\r\nimport IncomeAndExpenses from \"./components/groups/IncomeAndExpense\";\r\nimport Evaluation from \"./components/groups/Evaluation\";\r\nimport { DataProvider } from \"./context/DataContext\";\r\nimport { ThemeProvider, ThemeContext } from \"./context/ThemeContext\";\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className={`wrapper overflow-auto ${isDarkMode ? \"dark\" : \"\"}`}>\r\n      <Navbar />\r\n      <div className=\"content container my-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Investment />\r\n          </div>\r\n          <div className=\"col\">\r\n            <IncomeAndExpenses />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Evaluation />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right p-2\">\r\n        <span className=\"text-muted\">\r\n          <a\r\n            href=\"https://github.com/kmccullen97/reval\"\r\n            className=\"mr-2 text-muted\"\r\n          >\r\n            <AiFillGithub />\r\n          </a>\r\n          <span>v{process.env.REACT_APP_VERSION}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProviderApp = () => (\r\n  <ThemeProvider>\r\n    <DataProvider>\r\n      <App />\r\n    </DataProvider>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default ProviderApp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}