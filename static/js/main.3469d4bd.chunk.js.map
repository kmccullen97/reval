{"version":3,"sources":["context/ThemeContext.jsx","components/ui/Input/Input.jsx","components/ui/Tooltip.jsx","helpers/index.js","context/DataContext.jsx","components/ui/Input/Label.jsx","components/ui/Toggle.jsx","components/ui/Input/index.jsx","components/ui/TutorialModal.jsx","components/ui/Navbar.jsx","components/ui/StaticField.jsx","components/groups/Investment.jsx","components/ui/Collapsible.jsx","components/groups/IncomeAndExpense.jsx","components/groups/Evaluation.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","isDarkMode","setDarkMode","useEffect","darkMode","localStorage","getItem","Provider","value","toggleDarkMode","newMode","setItem","Input","onChange","error","onClose","useContext","className","length","type","onClick","Tooltip","title","icon","iconClass","window","innerWidth","width","setWidth","isSmallScreen","updateWidth","addEventListener","removeEventListener","popoverClass","popover","Popover","Title","Content","OverlayTrigger","trigger","placement","overlay","formatValue","parseFloat","toLocaleString","style","currency","toFixed","calcValueOrPercent","valueOf","split","percent","fixedValue","evaluateData","data","r","t","purchasePrice","additionalCosts","rent","mortgageRate","mortgageTerm","leaseLength","turnover","vacancyRate","downPayment","closingCosts","upFrontCost","propertyManager","loanBalance","mortgagePayment","Math","pow","insurance","propertyTax","cashFlow","cashOnCash","leaseRenewalFee","procurementFee","additionalPropertyManagementExpense","equityYearOne","p","n","calculateEquityGainYearOne","majorMinorCapEx","mediumTerm","mediumReturn","warnings","DataContext","defaults","name","homeValue","DataProvider","setData","evalData","setEvalData","setWarnings","urlParams","URLSearchParams","location","search","initialData","Object","keys","forEach","key","get","document","evaluate","evalWarnings","setDataValue","updatedData","Label","label","isStatic","undefined","info","Toggle","toggle","leftIcon","rightIcon","size","styles","height","padding","CustomInput","valueType","inline","valueAndPercent","percentValueOf","isActive","setIsActive","editValue","setEditValueX","setError","setEditValue","newEditValue","setType","newType","newValue","join","updateUrlParams","set","history","replaceState","toString","onSubmit","e","preventDefault","target","isNaN","TutorialModal","show","setShow","handleClose","Nav","Link","Modal","onHide","Header","closeButton","Body","href","Footer","Button","variant","CustomNavbar","Navbar","expand","Brand","color","aria-controls","Collapse","id","NavDropdown","alignRight","StaticField","Investment","Collapsible","open","setOpen","aria-expanded","in","IncomeAndExpense","Evaluation","App","process","ProviderApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3469d4bd.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const darkMode = localStorage.getItem(\"isDarkTheme\");\r\n    setDarkMode(darkMode === \"true\");\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newMode = !isDarkMode;\r\n    setDarkMode(newMode);\r\n    localStorage.setItem(\"isDarkTheme\", newMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\n\r\nconst Input = ({ value, onChange, error, onClose }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-direction-row align-items-center\">\r\n        <input\r\n          className={`form-control${error.length !== 0 ? \"is-invalid \" : \"\"} ${\r\n            isDarkMode ? \" bg-dark text-light\" : \"\"\r\n          }`}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"close-input\" onClick={onClose}>\r\n          <FiX />\r\n        </span>\r\n      </div>\r\n      {error.length !== 0 && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\nconst Tooltip = ({ children, title, icon, iconClass = \"\" }) => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [width, setWidth] = useState(window.innerWidth);\n  const isSmallScreen = width < 600;\n\n  useEffect(() => {\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  let popoverClass = \"\";\n  popoverClass += isDarkMode ? \"dark\" : \"\";\n  popoverClass += isSmallScreen ? \" top\" : \" right\";\n\n  const popover = (\n    <Popover className={popoverClass}>\n      <Popover.Title>{title}</Popover.Title>\n      <Popover.Content>{children}</Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      trigger={[\"hover\", \"click\"]}\n      placement={isSmallScreen ? \"top\" : \"right\"}\n      overlay={popover}\n    >\n      <span className={`p-1 ${iconClass}`}>{icon}</span>\n    </OverlayTrigger>\n  );\n};\n\nTooltip.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  iconClass: PropTypes.string,\n};\n\nexport default Tooltip;\n","export const formatValue = (value, type) => {\n  switch (type) {\n    case \"V\":\n    case \"currency\":\n      return parseFloat(value).toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      });\n    case \"P\":\n    case \"percent\":\n      return `${(parseFloat(value) * 100).toFixed(3)}%`;\n    case \"number\":\n    case \"text\":\n      return value;\n    default:\n      return \"!REF\";\n  }\n};\n\nexport const calcValueOrPercent = (value, valueOf) => {\n  const [percent, fixedValue, type] = value.split(\",\");\n\n  return type === \"P\" ? parseFloat(percent) * valueOf : parseFloat(fixedValue);\n};\n\nconst calculateMortgagePayment = (p, r, t) => {\n  return (\n    (p * (r / 12) * Math.pow(1 + r / 12, 12 * t)) /\n    (Math.pow(1 + r / 12, 12 * t) - 1)\n  );\n};\n\nconst calculateEquityGainYearOne = (p, r, n) => {\n  return (\n    p *\n    (1 - (Math.pow(1 + r, n) - Math.pow(1 + r, 12)) / (Math.pow(1 + r, n) - 1))\n  );\n};\n\nexport const evaluateData = (data) => {\n  const purchasePrice = parseFloat(data.purchasePrice);\n  const additionalCosts = parseFloat(data.additionalCosts);\n  const rent = parseFloat(data.rent);\n  const mortgageRate = parseFloat(data.mortgageRate);\n  const mortgageTerm = parseFloat(data.mortgageTerm);\n  const leaseLength = parseFloat(data.leaseLength);\n  const turnover = parseFloat(data.turnover);\n  const vacancyRate = parseFloat(data.vacancyRate);\n  const downPayment = calcValueOrPercent(data.downPayment, purchasePrice);\n  const closingCosts = calcValueOrPercent(data.closingCosts, purchasePrice);\n  const upFrontCost = downPayment + closingCosts + additionalCosts;\n  const propertyManager = calcValueOrPercent(data.propertyManager, rent);\n  const loanBalance = purchasePrice - downPayment;\n  const mortgagePayment = calculateMortgagePayment(\n    loanBalance,\n    mortgageRate,\n    mortgageTerm\n  );\n  const insurance = calcValueOrPercent(data.insurance, purchasePrice);\n  const propertyTax = calcValueOrPercent(data.propertyTax, purchasePrice);\n  const cashFlow =\n    rent - propertyManager - mortgagePayment - (insurance + propertyTax) / 12;\n  const cashOnCash = (cashFlow * 12) / upFrontCost;\n  const leaseRenewalFee = calcValueOrPercent(data.leaseRenewalFee, rent);\n  const procurementFee = calcValueOrPercent(data.procurementFee, rent);\n  const additionalPropertyManagementExpense =\n    (leaseRenewalFee / leaseLength + procurementFee / turnover) / 12;\n  const equityYearOne = calculateEquityGainYearOne(\n    loanBalance,\n    mortgageRate / 12,\n    mortgageTerm * 12\n  );\n  const majorMinorCapEx = calcValueOrPercent(data.majorMinorCapEx, rent);\n  const mediumTerm =\n    cashFlow -\n    additionalPropertyManagementExpense -\n    rent * vacancyRate -\n    majorMinorCapEx;\n  const mediumReturn = (mediumTerm * 12) / upFrontCost;\n\n  const warnings = {};\n  if (downPayment / 0.2 < purchasePrice) {\n    warnings.downPayment =\n      \"Most lenders require a down payment of at least 20%.\";\n  }\n  if (mortgageTerm < 1) {\n    warnings.equityYearOne =\n      \"Can't calculate equity gained in the first year if the mortgage term is less than one year.\";\n  }\n\n  const evalData = {\n    purchasePrice,\n    additionalCosts,\n    rent,\n    mortgageRate,\n    mortgageTerm,\n    leaseLength,\n    turnover,\n    vacancyRate,\n    downPayment,\n    closingCosts,\n    upFrontCost,\n    mortgagePayment,\n    insurance,\n    propertyTax,\n    cashFlow,\n    cashOnCash,\n    leaseRenewalFee,\n    procurementFee,\n    additionalPropertyManagementExpense,\n    equityYearOne,\n    majorMinorCapEx,\n    mediumTerm,\n    mediumReturn,\n  };\n\n  return [evalData, warnings];\n};\n","import React, { createContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { evaluateData } from \"../helpers\";\n\nexport const DataContext = createContext();\n\nconst defaults = {\n  name: \"123 Main St. (Edit me)\",\n  homeValue: \"115000.00\",\n  purchasePrice: \"115000.00\",\n  downPayment: \"0.2,30000.00,P\",\n  closingCosts: \"0.03,2000.00,P\",\n  additionalCosts: \"0\",\n  rent: \"1100.00\",\n  propertyManager: \"0.1,100.00,P\",\n  leaseLength: \"1\",\n  leaseRenewalFee: \"0.25,100.00,P\",\n  turnover: \"3\",\n  procurementFee: \"1.0,1100,P\",\n  mortgageRate: \"0.0425\",\n  mortgageTerm: \"30\",\n  insurance: \"0.007,700.00,P\",\n  propertyTax: \"0.01,1000.00,P\",\n  vacancyRate: \"0.05\",\n  majorMinorCapEx: \"0.1,100,P\",\n};\n\nexport const DataProvider = ({ children }) => {\n  const [data, setData] = useState(defaults);\n  const [evalData, setEvalData] = useState({});\n  const [warnings, setWarnings] = useState({});\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const initialData = {};\n    Object.keys(defaults).forEach((key) => {\n      if (key === \"name\" && urlParams.get(key) !== null) {\n        document.title = `Reval - ${urlParams.get(key)}`;\n      }\n      initialData[key] = urlParams.get(key)\n        ? urlParams.get(key)\n        : defaults[key];\n    });\n    evaluate(initialData);\n  }, []);\n\n  const setDataValue = (name, value) => {\n    if (name === \"name\") {\n      document.title = `Reval - ${value}`;\n    }\n    const updatedData = {\n      ...data,\n      [name]: value,\n    };\n    evaluate(updatedData);\n  };\n\n  const evaluate = (data) => {\n    setData(data);\n    const [evalData, evalWarnings] = evaluateData(data);\n    setEvalData(evalData);\n    setWarnings(evalWarnings);\n  };\n\n  return (\n    <DataContext.Provider value={{ data, setDataValue, evalData, warnings }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nDataProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import React, { useContext } from \"react\";\nimport { FiAlertTriangle, FiInfo } from \"react-icons/fi\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\n\nimport Tooltip from \"../Tooltip\";\nimport { DataContext } from \"../../../context/DataContext\";\nimport info from \"../../../data/info.json\";\n\nconst Label = ({ label, name, isStatic = false }) => {\n  const { warnings } = useContext(DataContext);\n\n  return (\n    <label>\n      <span>{label}</span>\n      {isStatic && (\n        <Tooltip\n          title=\"Static Field\"\n          icon={<AiFillThunderbolt />}\n          iconClass=\"text-muted\"\n        >\n          <span>This field is static and can&apos;t be changed</span>\n        </Tooltip>\n      )}\n      {info[name] !== undefined && (\n        <Tooltip title=\"Info\" icon={<FiInfo />} iconClass=\"text-muted\">\n          <span>{info[name]}</span>\n        </Tooltip>\n      )}\n      {warnings[name] !== undefined && (\n        <Tooltip\n          title=\"Warning\"\n          icon={<FiAlertTriangle />}\n          iconClass=\"text-warning\"\n        >\n          <span>{warnings[name]}</span>\n        </Tooltip>\n      )}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isStatic: PropTypes.bool,\n};\n\nexport default Label;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Toggle = ({ value, toggle, leftIcon, rightIcon, size = 40 }) => {\n  const styles = { height: `${size}px`, width: `${size}px`, padding: 0 };\n\n  return (\n    <div className=\"btn-group\">\n      <button\n        className={`btn btn-outline-primary icon ${value ? \"\" : \"active\"}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (value ? toggle() : null)}\n      >\n        {leftIcon}\n      </button>\n      <button\n        className={`btn btn-outline-primary icon ${value ? \"active\" : \"\"}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (!value ? toggle() : null)}\n      >\n        {rightIcon}\n      </button>\n    </div>\n  );\n};\n\nToggle.propTypes = {\n  value: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  leftIcon: PropTypes.node.isRequired,\n  rightIcon: PropTypes.node.isRequired,\n  size: PropTypes.number,\n};\n\nexport default Toggle;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { FiDollarSign, FiPercent } from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"./Input\";\nimport Label from \"./Label\";\nimport Toggle from \"../Toggle\";\nimport { formatValue, calcValueOrPercent } from \"../../../helpers\";\nimport { DataContext } from \"../../../context/DataContext\";\n\nconst CustomInput = ({\n  name,\n  label = null,\n  value,\n  valueType = \"currency\",\n  inline = false,\n  valueAndPercent = false,\n  percentValueOf = null,\n}) => {\n  if (value == undefined) {\n    return null;\n  }\n  const [percent, fixedValue, type] = value.split(\",\");\n  const { setDataValue } = useContext(DataContext);\n  const [isActive, setIsActive] = useState(false);\n  const [editValue, setEditValueX] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setEditValue(value);\n  }, [value]);\n\n  const setEditValue = (newEditValue) => {\n    setEditValueX(\n      valueAndPercent ? (type === \"P\" ? percent : fixedValue) : newEditValue\n    );\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (error.length !== 0) {\n      return;\n    }\n\n    const newValue = valueAndPercent\n      ? type === \"P\"\n        ? [editValue, fixedValue, type].join(\",\")\n        : [percent, editValue, type].join(\",\")\n      : editValue;\n\n    updateUrlParams(newValue);\n    setDataValue(name, newValue);\n    setIsActive(false);\n  };\n\n  const handleOnChange = (e) => {\n    const newValue = e.target.value;\n    setError(\"\");\n    if (valueType !== \"text\" && isNaN(newValue)) {\n      setError(\"Must be a valid number.\");\n    }\n\n    setEditValueX(newValue);\n  };\n\n  const onClose = () => {\n    setIsActive(false);\n    setError(\"\");\n    setEditValue(\n      valueAndPercent ? (type === \"P\" ? percent : fixedValue) : value\n    );\n  };\n\n  const setType = (newType) => {\n    const newValue = value.split(\",\");\n    newValue[2] = newType;\n    setEditValue(newType === \"P\" ? percent : fixedValue);\n    setDataValue(name, newValue.join(\",\"));\n    updateUrlParams(newValue);\n  };\n\n  const toggleType = () => {\n    if (type === \"P\") {\n      setType(\"V\");\n    } else {\n      setType(\"P\");\n    }\n  };\n\n  const updateUrlParams = (newValue) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(name, newValue);\n    window.history.replaceState({}, \"\", \"?\" + urlParams.toString());\n  };\n\n  const getFormattedValue = () => {\n    if (valueAndPercent) {\n      return formatValue(calcValueOrPercent(value, percentValueOf), \"V\");\n    } else {\n      return formatValue(value, valueType);\n    }\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div className={`form-group ${inline ? \"inline\" : \"\"}`}>\n        {label && <Label label={label} name={name} />}\n        <div className=\"d-flex\">\n          <div className=\"flex-fill\">\n            {isActive ? (\n              <Input\n                value={editValue}\n                onChange={handleOnChange}\n                error={error}\n                onClose={onClose}\n              />\n            ) : (\n              <div className=\"text-value\" onClick={() => setIsActive(true)}>\n                {getFormattedValue()}\n              </div>\n            )}\n          </div>\n          {valueAndPercent && (\n            <Toggle\n              value={type !== \"P\"}\n              toggle={toggleType}\n              leftIcon={<FiPercent />}\n              rightIcon={<FiDollarSign />}\n              size={32}\n            />\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nCustomInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  valueType: PropTypes.string,\n  inline: PropTypes.bool,\n  valueAndPercent: PropTypes.bool,\n  percentValueOf: PropTypes.number,\n};\n\nexport default CustomInput;\n","import React, { useState, useContext } from 'react';\nimport { Button, Modal, Nav } from 'react-bootstrap';\nimport { AiFillThunderbolt } from 'react-icons/ai';\n\nimport { ThemeContext } from '../../context/ThemeContext';\n\nconst TutorialModal = () => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Nav.Link onClick={handleShow}>tutorial</Nav.Link>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        className={isDarkMode ? 'is-dark' : ''}\n      >\n        <Modal.Header closeButton className={isDarkMode ? 'dark' : ''}>\n          <Modal.Title>Tutorial</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={isDarkMode ? 'dark' : ''}>\n          <p>A rental property evaluator with sharable links.</p>\n          <h4>Editing Fields</h4>\n          <p>\n            All non static fields are editable. Static fields are denoted with a{' '}\n            <AiFillThunderbolt /> icon next to the label. To edit a field click\n            on the displayed text, make changes in the text input and hit ENTER\n            on your keyboard to submit the changes. Notice that all calculations\n            a re-run, and corresponding fields are updated.\n          </p>\n          <p>\n            There are two types of editable fields. Single value, and fixed\n            value and percent. Fixed value and percent fields contain a toggle\n            switch that allows you to quickly switch between a fixed value or a\n            percent.\n          </p>\n          <h4>Sharing links</h4>\n          <p>\n            Want to share your calculations with someone? Each edit updates the\n            link with the new value. Just send them the link after you make all\n            your changes.\n          </p>\n          <h4>Other</h4>\n          <p>\n            Have a question, improvement feature request or find a bug? Submit\n            an issue{' '}\n            <a href=\"https://github.com/kmccullen97/reval/issues\">here</a>.\n          </p>\n        </Modal.Body>\n        <Modal.Footer className={isDarkMode ? 'dark' : ''}>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Got it\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TutorialModal;\n","import React, { useContext } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { BiBuildingHouse } from 'react-icons/bi';\nimport { FiMoon, FiSun } from 'react-icons/fi';\n\nimport Input from './Input';\nimport TutorialModal from './TutorialModal';\nimport Toggle from './Toggle';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { DataContext } from '../../context/DataContext';\n\nconst CustomNavbar = () => {\n  const { isDarkMode, toggleDarkMode } = useContext(ThemeContext);\n  const { data } = useContext(DataContext);\n\n  return (\n    <Navbar expand=\"lg\" variant={isDarkMode ? 'dark' : 'light'}>\n      <Navbar.Brand className=\"d-flex\">\n        <BiBuildingHouse size={30} color={isDarkMode ? 'white' : 'black'} />\n        <Input name={'name'} label=\"\" value={data.name} valueType=\"text\" />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\"></Nav>\n        <Nav className=\"align-content-center\">\n          <TutorialModal />\n          <NavDropdown\n            title=\"Settings\"\n            alignRight\n            className={isDarkMode ? 'dark' : ''}\n          >\n            <div className=\"d-flex align-items-center justify-content-between px-2\">\n              <span className=\"pr-2\">Theme</span>\n              <Toggle\n                value={isDarkMode}\n                toggle={toggleDarkMode}\n                leftIcon={<FiSun />}\n                rightIcon={<FiMoon />}\n                size={32}\n              />\n            </div>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Label from \"./Input/Label\";\r\nimport { formatValue } from \"../../helpers\";\r\n\r\nconst StaticField = ({ name, value, label, type = \"currency\" }) => (\r\n  <div className=\"form-group\">\r\n    <Label label={label} name={name} isStatic />\r\n    <div className=\"text-value static\">{formatValue(value, type)}</div>\r\n  </div>\r\n);\r\n\r\nStaticField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.number,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default StaticField;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../ui/Input\";\r\nimport StaticField from \"../ui/StaticField\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst Investment = () => {\r\n  const { data, evalData } = useContext(DataContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <Input name=\"homeValue\" label=\"Home Value\" value={data.homeValue} />\r\n        <Input\r\n          name=\"purchasePrice\"\r\n          label=\"Purchase Price\"\r\n          value={data.purchasePrice}\r\n        />\r\n      </div>\r\n      <div className=\"section\">\r\n        <Input\r\n          name=\"downPayment\"\r\n          label=\"Down Payment\"\r\n          value={data.downPayment}\r\n          percentValueOf={evalData.purchasePrice}\r\n          valueAndPercent\r\n        />\r\n        <Input\r\n          name=\"closingCosts\"\r\n          label=\"Closing Costs\"\r\n          value={data.closingCosts}\r\n          percentValueOf={evalData.purchasePrice}\r\n          valueAndPercent\r\n        />\r\n        <Input\r\n          name=\"additionalCosts\"\r\n          label=\"Additional Costs\"\r\n          value={data.additionalCosts}\r\n        />\r\n      </div>\r\n      <div className=\"section\">\r\n        <StaticField\r\n          name=\"upFrontCost\"\r\n          label=\"Up Front Cost\"\r\n          value={evalData.upFrontCost}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Investment;\r\n","import React, { useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst Collapsible = ({ children }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"div-link\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        {open ? \"see less\" : \"see more\"}\n      </div>\n      <Collapse in={open}>{children}</Collapse>\n    </>\n  );\n};\n\nCollapsible.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Collapsible;\n","import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../ui/Input\";\r\nimport StaticField from \"../ui/StaticField\";\r\nimport Collapsible from \"../ui/Collapsible\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\n\r\nconst IncomeAndExpense = () => {\r\n  const { data, evalData } = useContext(DataContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <Input name=\"rent\" label=\"Rent\" value={data.rent} />\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"collapsible\">\r\n          <Input\r\n            name=\"propertyManager\"\r\n            label=\"Property Manager\"\r\n            value={data.propertyManager}\r\n            percentValueOf={evalData.rent}\r\n            valueAndPercent\r\n          />\r\n          <Collapsible>\r\n            <div className=\"indent\">\r\n              <Input\r\n                name=\"leaseLength\"\r\n                label=\"Lease Length\"\r\n                value={data.leaseLength}\r\n                valueType=\"number\"\r\n                inline\r\n              />\r\n              <Input\r\n                name=\"leaseRenewalFee\"\r\n                label=\"Lease Renewal Fee\"\r\n                value={data.leaseRenewalFee}\r\n                percentValueOf={evalData.rent}\r\n                valueAndPercent\r\n              />\r\n              <Input\r\n                name=\"turnover\"\r\n                label=\"Turnover\"\r\n                value={data.turnover}\r\n                valueType=\"number\"\r\n                inline\r\n              />\r\n              <Input\r\n                name=\"procurementFee\"\r\n                label=\"ProcurementFee\"\r\n                value={data.procurementFee}\r\n                percentValueOf={evalData.rent}\r\n                valueAndPercent\r\n              />\r\n              <StaticField\r\n                name=\"additionalPropertyManagementExpense\"\r\n                label=\"Additional Cost\"\r\n                value={evalData.additionalPropertyManagementExpense}\r\n              />\r\n            </div>\r\n          </Collapsible>\r\n        </div>\r\n        <div>\r\n          <div className=\"collapsible\">\r\n            <StaticField\r\n              name=\"mortgagePayment\"\r\n              label=\"Mortgage\"\r\n              value={evalData.mortgagePayment}\r\n            />\r\n            <Collapsible>\r\n              <div className=\"indent\">\r\n                <Input\r\n                  name=\"mortgageRate\"\r\n                  label=\"Rate\"\r\n                  value={data.mortgageRate}\r\n                  valueType=\"percent\"\r\n                  inline\r\n                />\r\n                <Input\r\n                  name=\"mortgageTerm\"\r\n                  label=\"Term\"\r\n                  value={data.mortgageTerm}\r\n                  valueType=\"number\"\r\n                  inline\r\n                />\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n          <Input\r\n            name=\"insurance\"\r\n            label=\"Insurance\"\r\n            value={data.insurance}\r\n            percentValueOf={evalData.purchasePrice}\r\n            valueAndPercent\r\n          />\r\n          <Input\r\n            name=\"propertyTax\"\r\n            label=\"Property Taxes\"\r\n            value={data.propertyTax}\r\n            percentValueOf={evalData.purchasePrice}\r\n            valueAndPercent\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IncomeAndExpense;\r\n","import React, { useContext } from \"react\";\n\nimport StaticField from \"../ui/StaticField\";\nimport Input from \"../ui/Input\";\nimport { DataContext } from \"../../context/DataContext\";\n\nconst Evaluation = () => {\n  const { data, evalData } = useContext(DataContext);\n  return (\n    <>\n      <div className=\"section\">\n        <StaticField\n          name=\"cashFlow\"\n          label=\"Cash Flow\"\n          value={evalData.cashFlow}\n        />\n        <StaticField\n          name=\"cashOnCash\"\n          label=\"Cash on Cash\"\n          value={evalData.cashOnCash}\n          type=\"percent\"\n        />\n        <StaticField\n          name=\"equityYearOne\"\n          label=\"Equity Y1\"\n          value={evalData.equityYearOne}\n        />\n      </div>\n      <div className=\"section\">\n        <Input\n          name=\"vacancyRate\"\n          label=\"Vacancy Rate\"\n          value={data.vacancyRate}\n          valueType=\"percent\"\n        />\n        <Input\n          name=\"majorMinorCapEx\"\n          label=\"Major Minor CapEx\"\n          value={data.majorMinorCapEx}\n          percentValueOf={evalData.rent}\n          valueAndPercent\n        />\n        <StaticField\n          name=\"mediumTerm\"\n          label=\"Medium Term\"\n          value={evalData.mediumTerm}\n        />\n        <StaticField\n          name=\"mediumReturn\"\n          label=\"Medium Return\"\n          value={evalData.mediumReturn}\n          type=\"percent\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Evaluation;\n","import React, { useContext } from \"react\";\nimport { AiFillGithub } from \"react-icons/ai\";\n\nimport Navbar from \"./components/ui/Navbar\";\nimport Investment from \"./components/groups/Investment\";\nimport IncomeAndExpenses from \"./components/groups/IncomeAndExpense\";\nimport Evaluation from \"./components/groups/Evaluation\";\nimport { DataProvider } from \"./context/DataContext\";\nimport { ThemeProvider, ThemeContext } from \"./context/ThemeContext\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <div className={`wrapper overflow-auto ${isDarkMode ? \"dark\" : \"\"}`}>\n      <Navbar />\n      <div className=\"content container my-3\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-4\">\n            <Investment />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <IncomeAndExpenses />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <Evaluation />\n          </div>\n        </div>\n      </div>\n      <div className=\"text-right p-2\">\n        <span className=\"text-muted\">\n          <a\n            href=\"https://github.com/kmccullen97/reval\"\n            className=\"mr-2 text-muted\"\n          >\n            <AiFillGithub />\n          </a>\n          <span>v{process.env.REACT_APP_VERSION}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst ProviderApp = () => (\n  <ThemeProvider>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </ThemeProvider>\n);\n\nexport default ProviderApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}